server:
  port: 7011

spring:
  application:
    name: ns-bbs-article
  datasource:
    # 数据库访问配置
    url: jdbc:mysql://127.0.0.1:3306/ns_bbs?characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    # mysql用户名（需要改成你自己的）
    username: root
    # mysql密码（需要改成你自己的）
    password: 777888
    # 下面为连接池的补充设置，应用到上面所有数据源中
    druid:
      # 初始化大小
      initial-size: 5
      # 最小
      min-idle: 5
      # 最大
      max-active: 20
      # 配置获取连接等待超时的时间，单位是毫秒
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，wall用于防火墙
      filters: wall,state
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 自己配置监控统计拦截的filter
      filter:
        # 开启druiddatasource的状态监控
        stat:
          enabled: true
          db-type: mysql
          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中
          log-slow-sql: true
          slow-sql-millis: 2000
  redis:
    host: 139.9.78.65
    port: 6379
    password: 12345678
    # 单位 毫秒
    timeout: 60000
    lettuce:
      pool:
        max-active: 10
        max-idle: 10
        min-idle: 1
  data:
    mongodb:
      uri: mongodb://127.0.0.1:27017/ns_bbs

dubbo:
  application:
    name: ns-bbs-article
  registry:
    address: zookeeper://139.9.78.65:2181
    timeout: 60000
  protocol:
    name: dubbo
    port: 22002
  consumer:
    check: false
    timeout: 60000
  config-center:
    timeout: 60000
  provider:
    # 配了这个就可以抛出自定义异常（否则一直是RuntimeException）
    filter: -exception

mybatis:
  mapper-locations: classpath*:mybatis/mappers/*.xml

sso:
  user:
    login:
      # SSO地址
      address: http://sso.localhost.com
